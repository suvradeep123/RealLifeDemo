{
	"name": "AzureSQLtoADLS2",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from address where city='@{pipeline().parameters.City}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AddressID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AddressID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressLine1",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressLine1",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "AddressLine2",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "AddressLine2",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "City",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "City",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "StateProvinceID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "StateProvinceID",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "PostalCode",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PostalCode",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "SpatialLocation",
									"physicalType": "geography"
								},
								"sink": {
									"name": "SpatialLocation",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "rowguid",
									"type": "Guid",
									"physicalType": "uniqueidentifier"
								},
								"sink": {
									"name": "rowguid",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "saAzureSqlsource2",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dsDelimitedTextTarget2",
						"type": "DatasetReference",
						"parameters": {
							"Name": {
								"value": "@{pipeline().parameters.City}",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"City": {
				"type": "string",
				"defaultValue": "Kolkata"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-03-15T05:52:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}